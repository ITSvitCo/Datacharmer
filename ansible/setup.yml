# Добавляем хост в inventory
- hosts: localhost
  tasks:
  - name: Add host to the inventory
    local_action: 
      module: add_host 
      name: "{{ host }}"

# Устанавливаем python для работы ansible 
- hosts: "{{ host }}"
  remote_user: "{{ r_user }}"
  gather_facts: false
  tasks:
  - name: install python2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- hosts: "{{ host }}"
  remote_user: "{{ r_user }}"
  become: true
  become_method: sudo

  roles:
# Устанавливаем php7-fpm
  - role: vso2.php7-fpm
# Устанавливаем nginx
  - role: vso2.nginx
    nginx_vhosts:
    - listen: "80"
      server_name: "{{ host }}"
      root: "{{ root_dir }}/site"
      index: "index.php index.html index.htm"
      extra_parameters: |
        location ~ \.php$ {
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_index index.php;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          include fastcgi_params;
          }

  tasks:
# Клонируем репозиторий с сайтом
  - name: Get repo
    git: repo=https://github.com/ITSvitCo/Datacharmer.git dest="{{ root_dir }}"
# Клонируем репозиторий с DB
  - name: Get test_db
    git: repo=https://github.com/datacharmer/test_db dest="{{ root_dir }}/test_db"
# Setup mysql
  - name: Install mysql
    apt: name=mysql-server state=installed
# Start mysql
  - name: Start mysql
    shell: systemctl start mysql
# Set root password
  - name: Set root password
    shell: mysql -e "SET PASSWORD = PASSWORD('1')"
# Create user to connect to db
  - name: Create user
    shell: mysql -e "CREATE USER 'test'@'localhost' IDENTIFIED BY '1';"; mysql -e "GRANT ALL PRIVILEGES ON employees . * TO 'test'@'localhost'"; mysql -e "FLUSH PRIVILEGES;"
# Create cred_file for mysql
  - name: Create cred_file for mysql
    shell: echo '[client]' > ~/.my.cnf; echo 'user=root' >> ~/.my.cnf; echo 'password = 1' >> ~/.my.cnf
# Create db
  - name: Create db
    shell: mysql -e 'CREATE DATABASE employees'
# Restore db
  - name: Restore DB
    shell: cd "{{ root_dir }}/test_db"; mysql employees < "employees.sql"
# Add rule to firewall
  - name: Add iptables rule
    shell: iptables -I INPUT -p tcp -m tcp --dport 80 -j ACCEPT

